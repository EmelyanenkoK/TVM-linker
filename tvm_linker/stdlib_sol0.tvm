	.internal-alias :main_external,     -1
	.internal-alias :main_internal,     0
	.internal-alias :general_purpose,   1

	.selector
	; s0 - func_id
	; s1.. - other data
	SETCP0
	ACCEPT
	PUSHREFSLICE        ; dictionary of methods in first reference
	PLDDICT
	OVER
	NEQINT 1
	PUSHCONT {          ; if func_id negative or zero - direct call to method
		PUSHINT 32
		PRINTSTR selector_jmp_0
		DICTIGETJMP     ; execute method and return
	}
	PUSHCONT {          ; get dictionary with methods
		PUSHINT 32
        DICTIGETREF
		THROWIFNOT 52   ; no dictionary of methods
		PUSHINT 32
		PRINTSTR selector_jmp
		DICTUGETJMP     ; execute method and return
		THROW 51
	}
	IFELSE


	.internal   :main_external
	; s0 - msg body: slice
	; s1 - msg: cell
	; s2 - gram balance of msg: int
	; s3 - gram balance of contract: int
	PRINTSTR main_external
	PUSH s3
	PUSH s3
	; s0 - gram balance of msg: int
	; s1 - gram balance of contract: int
	; s2 - msg body: slice
	; s3 - msg: cell
	; s4 - gram balance of msg: int
	; s5 - gram balance of contract: int

	PUSH s3
	PUSHINT $get_src_addr$
	CALL 1
	POP s4
	XCHG s2, s3
	XCHG s1, s2
	XCHG s0, s1
	; s0 - addr
	; s1 - gram balance of msg: int
	; s2 - gram balance of contract: int
	; s3 - msg body: slice
	; s4 - gram balance of msg: int
	; s5 - gram balance of contract: int

	PUSH s3
	PUSHINT $get_msg_pubkey$
	CALL 1
	; s0 - pubkey
	; s1 - addr
	; s2 - gram balance of msg: int
	; s3 - gram balance of contract: int
	; s4 - msg body: slice
	; s5 - gram balance of msg: int
	; s6 - gram balance of contract: int

	PUSH s4		;push body
	DUP
	SREMPTY
	PUSHCONT {
		LDREF		;detach signature cell from body
		POP s6		;rewrite original body with remaining body slice
	}
	IFNOT
	DROP			;drop body or signature cell

	PUSHINT $store_signature$
	CALL 1
	NIP
	NIP

	; s0 - msg body: slice

	; check if message is empty
	DUP
	SDEMPTY
	PUSHCONT {
		PRINTSTR msg_is_empty
		DROP
		NEWDICT
		NEWC STDICT ENDC
		POPROOT
		RET
	}
	IFJMP

	;parse ABI version (1 byte) and load function id (4 bytes)
	LDU 8       ;load ABI version
	SWAP
	THROWIF 55  ; only version 0 is supported now
	LDU 32      ;load func id
	SWAP
	CALL 1      ;public method call


	.internal   :main_internal
	; s0 - msg body: slice
	; s1 - msg: cell
	; s2 - gram balance of msg: int
	; s3 - gram balance of contract: int
	PRINTSTR main_internal
	PUSH s3
	PUSH s3
	; s0 - gram balance of msg: int
	; s1 - gram balance of contract: int
	; s2 - msg body: slice
	; s3 - msg: cell
	; s4 - gram balance of msg: int
	; s5 - gram balance of contract: int

	PUSH s3
	PUSHINT $get_src_addr$
	CALL 1
	POP s4
	XCHG s2, s3
	XCHG s1, s2
	XCHG s0, s1
	; s0 - addr
	; s1 - gram balance of msg: int
	; s2 - gram balance of contract: int
	; s3 - msg body: slice
	; s4 - gram balance of msg: int
	; s5 - gram balance of contract: int

	PUSHINT 0 ; put 0 instead of signature
	; s0 - 0 as signature
	; s1 - addr
	; s2 - gram balance of msg: int
	; s3 - gram balance of contract: int
	; s4 - msg body: slice
	; s5 - gram balance of msg: int
	; s6 - gram balance of contract: int

	PUSHINT $store_signature$
	CALL 1
	NIP
	NIP

	; s0 - msg body: slice

	; protection against empty message
	DUP
	SEMPTY
	IFRET

	;parse ABI version (1 byte) and load function id (4 bytes)
	LDU 8       ;load ABI version
	SWAP
	THROWIF 55  ; only version 0 is supported now
	LDU 32      ;load func id
	SWAP
	CALL 1      ;public method call

	RET

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;;; THE CODE BELOW IS GENERATED. DO NOT CHANGE IT!

