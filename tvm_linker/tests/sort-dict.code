; Selection sort --- native assembler implementation by
; Sergey Gorelyshev

	.globl	main

PUSHSLICE x20
PUSHSLICE x01
NEWDICT
PUSHINT 8
DICTSET
PUSHSLICE x2B
SWAP
PUSHSLICE x02
SWAP
PUSHINT 8
DICTSET
PUSHSLICE x0F
SWAP
PUSHSLICE x03
SWAP
PUSHINT 8
DICTSET
PUSHSLICE x1B
SWAP
PUSHSLICE x04
SWAP
PUSHINT 8
DICTSET
PUSHSLICE x03
SWAP
PUSHSLICE x05
SWAP
PUSHINT 8
DICTSET
PUSHSLICE x07
SWAP
PUSHSLICE x06
SWAP
PUSHINT 8
DICTSET
PUSHSLICE x0D
SWAP
PUSHSLICE x07
SWAP
PUSHINT 8
DICTSET
PUSHSLICE x09
SWAP
PUSHSLICE x08
SWAP
PUSHINT 8
DICTSET
PUSHSLICE x05
SWAP
PUSHSLICE x09
SWAP
PUSHINT 8
DICTSET
PUSHSLICE x12
SWAP
PUSHSLICE x0A
SWAP
PUSHINT 8
DICTSET
PUSHSLICE x05
SWAP
PUSHSLICE x0B
SWAP
PUSHINT 8
DICTSET


PUSHINT 1
SWAP
PUSH s0
PUSHSLICE x00
SWAP
PUSHINT 8
DICTGETNEXT
DROP
PUSH s0
XCHG s0, s4
DROP
PUSHCONT {
	PUSH s0
	PUSH s3
	PUSHINT 8
	DICTGETNEXT
	PUSHINT -1
	EQUAL
	PUSHCONT {
		PUSHCONT {
			XCHG s0, s3
			XCHG s2, s3
			LDI 8	
			DROP
			SWAP
			LDI 8
			DROP
			MINMAX
			NEWC
			STU 8
			ENDC
			CTOS
			SWAP
			NEWC
			STU 8
			ENDC
			CTOS
			PUSH s0
			PUSH s3
			PUSH s6	
			PUSHINT 8
			DICTREPLACE
			DROP
			PUSH s2
			SWAP
			PUSH s5
			SWAP
			PUSHINT 8
			DICTREPLACE
			DROP
			XCHG s0, s5
			DROP
			XCHG s1, s3
			XCHG s1, s2
			DROP
			PUSH s3
			PUSHINT 8
			DICTGETNEXT
			PUSHINT 0
			EQUAL
		}
		UNTIL
		DROP
		DROP
		SWAP
		PUSH s1
		PUSHINT 8
		DICTGETNEXT
		PUSHINT 0
		EQUAL
		PUSH s1
		SWAP
		XCHG s2, s3
		XCHG s3, s4
	}
	PUSHCONT {
		PUSHINT -1
	}
	IFELSE
}
UNTIL

DROP
DROP
SWAP
DROP
PUSHSLICE x00
PUSH s1
PUSHINT 8
DICTGETNEXT
PUSHINT -1
EQUAL
PUSHCONT {
	PUSHCONT {
		SWAP
		LDI 8
		DROP
		SWAP
		XCHG s1, s2
		PUSH s1
		PUSHINT 8
		DICTGETNEXT
		PUSHINT 0
		EQUAL
	}
	UNTIL
}
IF
