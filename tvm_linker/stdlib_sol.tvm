	.internal-alias :main_external,     -1
	.internal-alias :main_internal,     0
	.internal-alias :general_purpose,   1

    .selector
    ; s0 - func_id
    ; s1.. - other data
    SETCP0
    PUSHREFSLICE        ; dictionary of methods in first reference
    OVER
    NEQINT 1
    PUSHCONT {          ; if func_id negative or zero - direct call to method
        PUSHINT 32
        DICTIGETJMP     ; execute method and return
    }
    PUSHCONT {          ; get dictionary with methods
        PUSHINT 32
        DICTIGET
        THROWIFNOT 52   ; no dictionary of methods
        PUSHINT 32
        DICTUGETJMP     ; execute method and return
        THROW 51
    }
    IFELSE

    .globl	get_msg_pubkey
	; s0 - msg body: slice
	; Returns 0 if message is not signed
	; Returns sender's pubkey if signature is valid
	; Throws exception 40 if signature is invalid
	DUP
	SREMPTY
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	PUSHCONT {
		;;;; Checks the signature of a given message and returns sender's public key
		;;;; Throws exception 40 if signature is invalid
		
		; stack: msg
		ZERO SWAP
		; stack: 0 msg
		LDREFRTOS
		; stack: 0 msg' slice:sign+pubKey
		DUP
		; stack: 0 msg' slice:sign+pubKey slice:sign+pubKey
		PUSHINT 512
		SDSKIPFIRST
		LDU 256
		DROP
		; stack: 0 msg' slice:sign+pubKey pubKey
		DUP
		; stack: 0 msg' slice:sign+pubKey pubKey pubKey
		POP s4
		; stack: pubKey msg' slice:sign+pubKey pubKey
		ROT
		; stack: pubKey slice:sign+pubKey pubKey msg' 
		HASHSU
		; stack: pubKey slice:sign+pubKey pubKey msg-hash
		ROTREV
		; stack: pubKey msg-hash slice:sign+pubKey pubKey
		CHKSIGNU
		THROWIFNOT 40
		; stack: pubKey
	}
	IFELSE
	RET
	
    .internal   :main_external
    ; s0 - msg body: slice
    ; s1 - msg: cell
    ; s2 - gram balance of msg: int
    ; s3 - gram balance of contract: int

	POP s1
	POP s1
	POP s1
	
    ; s0 - msg body: slice
	
	DUP
	PUSHINT $get_msg_pubkey$
	CALL 1
	
	NEWC
	STU 256
	ENDC
	POP c5
    
    ;parse ABI version (1 byte) and load function id (4 bytes)
    LDU 8       ;load ABI version
    SWAP  
    THROWIF 55  ; only version 0 is supported now
    LDU 32      ;load func id
    SWAP
    CALL 1      ;public method call

    .internal   :main_internal
    RET         ;contract ignores internal msgs by default 

